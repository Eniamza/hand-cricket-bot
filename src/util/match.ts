import { User, TextChannel, MessageEmbed } from 'discord.js';
import toss from './toss';
import DiscordClient from './DiscordClient';

export enum Players { CHALLENGER, OPPONENT };
export enum MatchResult { TIE, CHALLENGER_WON, OPPONENT_WON };

export class Match {
  vsBot: boolean;
  challenger: User;
  opponent: User;
  stadium: TextChannel;
  client: DiscordClient;

  opener: Players;
  result: MatchResult;
  ballsPlayed: number = 0;
  numInnings: number = 0;

  challengerScore: number = 0;
  opponentScore: number = 0;

  toss = toss;

  constructor(client: DiscordClient, vsBot: boolean, stadium: TextChannel, challenger: User) {
    this.client = client;
    this.vsBot = vsBot;
    this.challenger = challenger;
    this.stadium = stadium;
  }

  getScoreBoard() {
    const scoreboard = new MessageEmbed()
    .setAuthor('Hand Cricketer', this.client.user.avatarURL())
    .setTitle('Scoreboard')
    .setTimestamp()
    .setFooter('Stats generated by Hand Cricketer', this.client.user.avatarURL())
    .addField(`Opener`, `<@${ this.opener === Players.OPPONENT ? this.opponent.id : this.challenger.id }>`, true)
    .addField(`Chaser`, `<@${ this.opener === Players.CHALLENGER ? this.opponent.id : this.challenger.id }>`, true)
    .addField(`Balls`, this.ballsPlayed, true)
    .setDescription(this.numInnings === 1 ? `Mid Innings Score` : `Match End Score`)

    scoreboard.addField(`Opener's score`, this.opener === Players.CHALLENGER ? this.challengerScore : this.opponentScore, true);
    if (this.numInnings > 1) scoreboard.addField(`Chaser's score`, this.opener === Players.OPPONENT ? this.challengerScore : this.opponentScore, true);

    switch (this.result) {
      case MatchResult.TIE:
        scoreboard.addField('Result', 'It was a tie :(');
        break;
      case MatchResult.OPPONENT_WON:
        scoreboard.addField('Result', `<@${this.opponent.id}> won! :trophy:`);
        break;
      case MatchResult.CHALLENGER_WON:
        scoreboard.addField('Result', `<@${this.challenger.id}> won! :trophy:`);
    }

    return scoreboard;
  }
}
